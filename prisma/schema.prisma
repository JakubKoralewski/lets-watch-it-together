// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//model Media {
//  id        Int     @default(autoincrement()) @id
//  name     String
//  year      Int
//  posterUrl String @map(name: "poster_url")
//  content   String?
//  published Boolean @default(false)
//  author    User?   @relation(fields: [authorId], references: [id])
//  authorId  Int?
//}

model User {
  id                Int       @default(autoincrement()) @id
  name              String?
  email             String?   @unique
  emailVerified     DateTime? @map(name: "email_verified")
  image             String?
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @updatedAt @map(name: "updated_at")
  liked             Int[] // TMDB ids
  friends           User[]
  meetingsCreated   Meeting[] @relation(name: "Inviter")
  meetingsReceived  Meeting[] @relation(name: "Invitee")

  @@map(name: "users")
}

model Meeting {
  id             Int       @default(autoincrement()) @id
  media          Int       // TMDB id

  inviter        User      @relation(name: "Inviter", fields: [inviterId], references: [id])
  inviterId      Int       @map(name: "inviter_id")

  invitee        User      @relation(name: "Invitee", fields: [inviteeId], references: [id])
  inviteeId      Int       @map(name: "invitee_id")

  suggestedDate  DateTime? @map(name: "suggested_date")
  createdAt      DateTime  @default(now()) @map(name: "created_at")
  acceptedAt     DateTime? @map(name: "accepted_at")
  updatedAt      DateTime  @default(now()) @map(name: "updated_at")

  @@index([inviteeId], name: "inviteeId")
  @@index([inviterId], name: "inviterId")
  @@map(name: "meetings")
}

model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")
  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @default(autoincrement()) @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")
  @@map(name: "verification_requests")
}

